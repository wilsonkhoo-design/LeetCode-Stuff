// 1351. Count Negative Numbers in a Sorted Matrix
#include <iostream>
#include <vector>
#include <string>
using namespace std;
vector<vector<int>> grid = {{3,2},{1,0}};

class Solution {
public:
    int countNegatives(vector<vector<int>>& grid) {
        int negCount=0;
        for(int i =0; i<grid.size();i++){
            int left =0;
            int right = grid[i].size()-1;
            int TempnegCount=0;
            cout<<"i="<<i<<"\n";
            while(left<=right){
                int mid = left+(right-left)/2;
                if(grid[i][mid]==0){
                    left=mid+1;
                }
                else if(grid[i][mid]>0){
                    left=mid+1;
                }
                else{
                    if(grid[i][right]<0){
                        for(int j =0; j<grid[i].size();j++){
                            if(grid[i][j]<0)
                            TempnegCount+=1;
                            
                        }
                        break;    
                    }
                    else{
                        cout<<"mid="<<mid<<"\n";
                        TempnegCount+=1;
                        right=mid-1;
                    }
                }
                
                
            }
            
            negCount+=TempnegCount;
            
        }
        if(negCount!=0)
            return negCount;
            
            else
            return 0;
    }
};
int main() {
    Solution solu;
    cout<<solu.countNegatives(grid);

    return 0;
}
